##############################################
# Shopify Sync – .env.example (copy to .env) #
##############################################

###########
# Core
###########
# Runtime mode toggle (affects logging & some feature flags)
ENV=dev
# Log verbosity: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO


###########
# FastAPI
###########
# Host/port the API binds to inside Docker
API_HOST=0.0.0.0
API_PORT=8000

# Public base URL where Shopify will reach your app (OAuth redirect & webhooks).
# Local dev: use your ngrok/Cloudflared tunnel URL (e.g. https://abc123.ngrok.app).
APP_BASE_URL=


############
# Postgres
############
# SQLAlchemy DSN for the app database (Docker service name "db" by default)
DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/shopify


#######################
# Redis / Celery Tasks
#######################
# Redis connection (broker & result backend)
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}


#########################
# Shopify – Admin & OAuth
#########################
# Your store domain (full myshopify domain recommended)
# e.g. teststorebase-200.myshopify.com
SHOPIFY_SHOP=
# Admin API version to use
SHOPIFY_API_VERSION=2024-10

# --- Choose ONE auth path ---
# (A) OAuth / Custom app (recommended)
#   Get these from Shopify Partners → Apps → {Your App}
SHOPIFY_CLIENT_ID=
SHOPIFY_CLIENT_SECRET=
# Comma-separated scopes your app requests on install
OAUTH_SCOPES=read_products,write_products,read_inventory,write_inventory,read_orders
# After OAuth install completes, store the Admin API access token here
SHOPIFY_ACCESS_TOKEN=

# (B) Legacy private app (not recommended, leave empty if using OAuth)
# Used for Basic Auth (apikey:password). Prefer OAuth instead.
SHOPIFY_API_KEY=
SHOPIFY_API_PASSWORD=

# Webhook HMAC secret (required if you enable/verify webhooks)
SHOPIFY_WEBHOOK_SECRET=

# If omitted, the app auto-picks the first active Shopify location.
# Set explicitly to control where inventory levels are written/read.
SHOPIFY_LOCATION_ID=


##########################################
# Dynamics 365 Business Central (BC365)
##########################################
# OData V4 base URL. Replace <tenant> and <env> with your values.
# Example: https://api.businesscentral.dynamics.com/v2.0/<tenant>/<env>/ODataV4
BC365_BASE_URL=https://api.businesscentral.dynamics.com/v2.0/tenant/env/ODataV4
# Entra ID (Azure AD) tenant GUID
BC365_TENANT_ID=
# Environment name (e.g., production or sandbox)
BC365_ENVIRONMENT=production
# App registration (Entra ID) credentials
BC365_CLIENT_ID=
BC365_CLIENT_SECRET=
# Company ID (GUID) used in BC endpoints
BC365_COMPANY_ID=
# Optional: fallback customer number for Shopify web orders
BC365_DEFAULT_CUSTOMER=10000

# SKU mapping JSON
# IMPORTANT: This maps **Shopify SKU → BC Item No**.
# The app internally builds the reverse map (BC → Shopify) when needed.
SKU_MAP_JSON={"SKU2006-001":"1896-S","SKU2006-020":"1900-S","SKU2006-035":"1906-S"}


############
# Security
############
# Shared secret for protecting debug/admin endpoints (if your code checks it)
ADMIN_API_TOKEN=change-me


################
# Observability
################
# Expose /metrics (Prometheus format) from the API
PROMETHEUS_ENABLE=true
# If your worker process exposes its own metrics endpoint, set its port here.
# (Leave as-is if you only scrape the API’s /metrics.)
PROMETHEUS_WORKER_PORT=8001
